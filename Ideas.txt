- per sceenshots und paint oder so farb werte der karten ermitteln
- farben in Lab format umrechnen und dann delta e formel benutzen
- mit formel ähnlichkeit zwischen einander berechnen (mit glare effect und ohne)

Idee: 
- Ohne:
	-> einfach ausrechnen
- Mit: 
	-> 100 oder mehr Durchläufe: Sceenshort, Farbwerte der 
	Farben extrahieren und ähnlichkeit berechnen dann am ende mittelwert
	für Faktor jeder Positionskombination ermitteln der immer aufgerechnet wird 
	Problem: Automatsierung der Screenshots und Farbenextraktion

	- es gibt python funktionn die aus bildern farb werte an koordinaten extrahiert
	-> man könnte spiel 100 mal manuell starten und screenshot 
	machen und dann automatisiert script über alle bilder laufen lassen
	und die farbwerte der einzelnen karten bestimmen
		-> viereckigen bereich nehmen und mittelwert bilden 
		weil licht streifen hat
	- einziges Problem: ich brauche alle karten im spiel umgedreht 
	(gibt es die möglichkeit im spiel? wenn nein kann man sie hinzufügen?)

fragen: sin die benutzen farben bei normalem modus und glare effect die selben ?
-> ja 

14 mal 14 mögliche positionen für jede 2 karten -> 196 möglihkeiten an anornungen 
aus jedem bild erhalte ich für 2 farben 4 möglichkeiten wenn die unterschiedlich sind (eine wenn die gleich sind)

Code für berechnung von lab 
# https://stackoverflow.com/questions/13405956/convert-an-image-rgb-lab-with-python


Normalisierung der delta e werte: Normalisierung auf Original Farben berechnen um
realistische bereiche für ähnliche  und nicht ähnliche Farben zu haben. (also ein
genberelles modell zum fitten von delta e werten)
Dann delta e werte von glare effect damit transformieren.
-> sollte sinnvolle werte ergeben.
Möglichkeiten: Min max Scaling, Normaliszatoin

vielleicht mehr als 100 screenshots.


--> für min max scaling entscheiden 


Kommentare von mazen:
Versuch 1: max wert finden und scaling machen. höchster wert is 1 und kleinster wert 0
	vielelicht vergeleichen mit markus.
Vergleichen cie1976 und cie2000 alles ausrechnenn und skaliieren mir max wert (finden durch for loop durch alle rbgb werte)
und vergleichen mit markus. --> verglichen aber immernoch nicht die gleichen werte. 

Versuch 2: 

Nächste aufgabe: Simulieren mit dem Simulator von Mazen
Bisschen modifizieren wie zum beispiel 1.1 2.2 und so weiter bei glare effect macht sinn.
Java code angucken und verstehen.
Am besten branche mit genau dem sleben code in java. 
Simulator erweitern um 1.1 usw.
Statistics in python script anpassen. 
Mehr dokumentieren.
Was ich probiert und getestet habe. 
Dann ihm bescheid sagen und ich kriege zugriff auf simulator. 

Rgb mit original farben überprüfen bei gimp zum beispiel.
--> mit gimp überprüft: Farbwerte bei originalen Farben stimmen. Glare effect kann man nicht testen, da mittelwert gebildet wird. 


Rechercheieren wie viel Screenshots man haben muss für verschiedene POistionts kombinationen.
Auch aufschreieben für bachelor arbeit.

Vielleiihct statt seklber lab zu berechen: https://python-colormath.readthedocs.io/en/latest/color_objects.html und
https://python-colormath.readthedocs.io/en/latest/conversions.html --> wurde geändert  





